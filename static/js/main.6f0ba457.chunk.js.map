{"version":3,"sources":["components/Section/Section.style.jsx","components/Section/Section.jsx","components/Container/Container.style.jsx","components/Container/Container.jsx","components/Searchbar/Searchbar.style.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.style.jsx","services/apiService.jsx","services/constants.jsx","components/ImageGalleryItem/ImageGalleryItem.style.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.style.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.style.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","section","Section","children","div","Container","Header","header","Form","form","Button","button","Span","span","Input","input","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","e","preventDefault","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","autocomplete","placeholder","onChange","currentTarget","value","toLowerCase","List","ul","Title","h1","LoaderWrap","NewFetchApiImage","this","url","key","page","a","fetch","then","response","ok","json","Promise","reject","Error","error","Item","li","Img","img","ImageGalleryItem","smallImage","alt","onClick","largeImage","src","LoadMore","newFetchApiImage","Status","ImageGallery","onOpenModal","images","setImages","setPage","status","setStatus","setError","useEffect","fetchApiImage","prevState","hits","catch","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","timeout","length","map","image","id","webformatURL","tags","largeImageURL","incrementPage","message","Overlay","ModalWrapper","modalRoot","querySelector","Modal","onClose","modalImage","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","App","showModal","setShowModal","setLargeImage","newSearchQuery","trim","getAttribute","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f0ba457.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nconst Wrapper = styled.section`\r\n  padding-bottom: 15px;\r\n`\r\n\r\nexport { Wrapper }\r\n","import { Wrapper } from './Section.style'\r\n\r\nimport React from 'react'\r\n\r\nfunction Section({ children }) {\r\n  return <Wrapper>{children}</Wrapper>\r\n}\r\n\r\nexport default Section\r\n","import styled from '@emotion/styled'\r\n\r\nconst Wrapper = styled.div``\r\n\r\nexport { Wrapper }\r\n","import React from 'react'\r\nimport { Wrapper } from './Container.style'\r\n\r\nfunction Container({ children }) {\r\n  return <Wrapper>{children}</Wrapper>\r\n}\r\n\r\nexport default Container\r\n","import styled from '@emotion/styled'\r\n\r\nconst Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst Span = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`\r\n\r\nconst Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nexport { Header, Form, Button, Span, Input }\r\n","import React, { useState } from 'react'\r\nimport { Header, Form, Button, Span, Input } from './Searchbar.style'\r\nimport { toast } from 'react-toastify'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchQuery(e.currentTarget.value.toLowerCase())\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (searchQuery === '') {\r\n      toast.warn('🦄 Enter yor query!', {\r\n        position: 'top-right',\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n\r\n    onSubmit(searchQuery)\r\n\r\n    setSearchQuery('')\r\n  }\r\n\r\n  return (\r\n    <Header className=\"Searchbar\">\r\n      <Form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n        <Button type=\"submit\" className=\"SearchForm-button\">\r\n          <Span className=\"SearchForm-button-label\">Search</Span>\r\n        </Button>\r\n\r\n        <Input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleInputChange}\r\n          value={searchQuery}\r\n        />\r\n      </Form>\r\n    </Header>\r\n  )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nconst List = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 50px;\r\n\r\n  margin-bottom: 0;\r\n\r\n  font-size: 35px;\r\n  text-align: center;\r\n  color: #292f50;\r\n`\r\nconst LoaderWrap = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nexport { List, Title, LoaderWrap }\r\n","import { BASE_URL, API_KEY } from './constants'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default class NewFetchApiImage {\r\n  constructor() {\r\n    this.url = BASE_URL\r\n    this.key = API_KEY\r\n    this.page = 1\r\n  }\r\n\r\n  async fetchApiImage(searchQuery) {\r\n    return await fetch(\r\n      `${this.url}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${this.page}&per_page=12&key=${this.key}`,\r\n    ).then((response) => {\r\n      if (response.ok) {\r\n        return response.json()\r\n      }\r\n      return Promise.reject(\r\n        new Error(\r\n          toast.error(`☠️ Error, nothing found`, {\r\n            position: 'top-right',\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }),\r\n        ),\r\n      )\r\n    })\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1\r\n  }\r\n}\r\n","const BASE_URL = 'https://pixabay.com/api/'\r\nconst API_KEY = '21694306-d611e7839c34f02b2916a8d9a'\r\n\r\nexport { BASE_URL, API_KEY }\r\n","import styled from '@emotion/styled'\r\n\r\nconst Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`\r\n\r\nexport { Item, Img }\r\n","import React from 'react'\r\nimport { Item, Img } from './ImageGalleryItem.style'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ImageGalleryItem({ smallImage, alt, onClick, largeImage }) {\r\n  return (\r\n    <Item className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <Img\r\n        src={smallImage}\r\n        alt={alt}\r\n        data-image={largeImage}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport default ImageGalleryItem\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImage: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nconst LoadMore = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:focus,\r\n  &:hover {\r\n    background-color: #303f9f;\r\n  }\r\n`\r\n\r\nexport { LoadMore }\r\n","import React from 'react'\r\nimport { LoadMore } from './Button.style'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Button({ onClick, children }) {\r\n  return (\r\n    <LoadMore type=\"submit\" onClick={onClick}>\r\n      {children}\r\n    </LoadMore>\r\n  )\r\n}\r\n\r\nexport default Button\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { List, Title, LoaderWrap } from './ImageGallery.style'\r\nimport NewFetchApiImage from '../../services/apiService'\r\nimport ImageGalleryItem from '../ImageGalleryItem'\r\nimport Button from '../Button'\r\nimport Loader from 'react-loader-spinner'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst newFetchApiImage = new NewFetchApiImage()\r\n\r\nconst Status = {\r\n  idle: 'idle',\r\n  pending: 'pending',\r\n  resolved: 'resolved',\r\n  rejected: 'rejected',\r\n}\r\n\r\nexport default function ImageGallery({ searchQuery, onOpenModal }) {\r\n  const [images, setImages] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [status, setStatus] = useState(Status.idle)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (searchQuery === '') {\r\n      return\r\n    }\r\n    setStatus(Status.pending)\r\n\r\n    newFetchApiImage\r\n      .fetchApiImage(searchQuery, page)\r\n      .then((images) => {\r\n        setImages((prevState) => [...prevState, ...images.hits])\r\n        setStatus(Status.resolved)\r\n      })\r\n      .catch((error) => {\r\n        setError(error)\r\n        setStatus(Status.rejected)\r\n      })\r\n      .finally(() => {\r\n        if (page > 1) {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          })\r\n        }\r\n      })\r\n  }, [page, searchQuery])\r\n\r\n  const loadsMorePages = (e) => {\r\n    setPage((prevState) => prevState + 1)\r\n    newFetchApiImage.incrementPage()\r\n  }\r\n\r\n  if (status === 'idle') {\r\n    return (\r\n      <Title>Find your image, wraith now. Please, write your image query</Title>\r\n    )\r\n  }\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <LoaderWrap>\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#1f2527\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </LoaderWrap>\r\n    )\r\n  }\r\n\r\n  if (status === 'resolved') {\r\n    return (\r\n      <>\r\n        {images.length === 0 && (\r\n          <Title>Sorry, we didn't find anything of the request!</Title>\r\n        )}\r\n        {images.length > 0 && (\r\n          <List className=\"ImageGallery\">\r\n            {images.map((image) => {\r\n              const { id, webformatURL, tags, largeImageURL } = image\r\n              return (\r\n                <ImageGalleryItem\r\n                  key={id}\r\n                  smallImage={webformatURL}\r\n                  alt={tags}\r\n                  largeImage={largeImageURL}\r\n                  onClick={onOpenModal}\r\n                />\r\n              )\r\n            })}\r\n          </List>\r\n        )}\r\n        {images.length >= 12 && (\r\n          <Button onClick={loadsMorePages}>Load more</Button>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  if (status === 'rejected') {\r\n    return (\r\n      <Title data-error-id={error.message}>\r\n        Uh, oh we have a problem: Error 404\r\n      </Title>\r\n    )\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\n\r\nconst ModalWrapper = styled.div`\r\n  max-width: calc(100vw - 100px);\r\n  max-height: calc(100vh - 30px);\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 700px;\r\n  height: 500px;\r\n`\r\n\r\nexport { Overlay, ModalWrapper, Img }\r\n","import React, { useEffect } from 'react'\r\nimport { Overlay, ModalWrapper, Img } from './Modal.style'\r\nimport { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport default function Modal({ onClose, modalImage }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown)\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown)\r\n    }\r\n  })\r\n\r\n  const onClickModalClose = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose()\r\n    }\r\n  }\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <Overlay className=\"Overlay\" onClick={onClickModalClose}>\r\n      <ModalWrapper className=\"Modal\">\r\n        <Img src={modalImage} alt=\"image\" />\r\n      </ModalWrapper>\r\n    </Overlay>,\r\n    modalRoot,\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  modalImage: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n","import React, { useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Section from \"./components/Section\";\nimport Container from \"./components/Container\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Modal from \"./components/Modal/\";\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n\n  const formSubmitHandler = (newSearchQuery) => {\n    setSearchQuery(newSearchQuery.trim());\n  };\n\n  const getImageLargeSize = (e) => {\n    setLargeImage(e.target.getAttribute(\"data-image\"));\n\n    setShowModal(!showModal);\n  };\n\n  return (\n    <div className=\"App\">\n      {showModal && (\n        <Modal\n          onClose={() => setShowModal(!showModal)}\n          modalImage={largeImage}\n        />\n      )}\n      <Section>\n        <Container>\n          <Searchbar onSubmit={formSubmitHandler} />\n          <ImageGallery\n            searchQuery={searchQuery}\n            onOpenModal={getImageLargeSize}\n          />\n        </Container>\n      </Section>\n      <ToastContainer />\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}